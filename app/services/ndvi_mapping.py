"""
NDVIデータと作物健康状態をマッピングするための定義モジュール
"""

# NDVIのマッピングルール
NDVI_MAPPING = {
    "health": {
        "excellent": (0.8, 1.0),
        "good": (0.6, 0.8),
        "moderate": (0.4, 0.6),
        "poor": (0.2, 0.4),
        "very_poor": (0, 0.2),
        "stressed": (-1, 0)
    },
    "recommendations": {
        "excellent": [
            "現在の管理方法を継続してください。作物の健康状態は非常に良好です。",
            "収穫準備の計画を立てましょう。NDVIの高い値は収穫適期に近づいていることを示しています。",
            "今後の気象条件を確認し、必要に応じて灌水の調整を行ってください。"
        ],
        "good": [
            "作物の状態は良好ですが、さらなる最適化の余地があります。",
            "軽い追加施肥を検討してください。特に窒素が効果的かもしれません。",
            "予防的な病害虫管理を継続してください。"
        ],
        "moderate": [
            "栄養バランスを改善するための土壌テストを検討してください。",
            "水分ストレスの兆候がないか注意深く観察し、灌水スケジュールを調整してください。",
            "葉面散布の追加を検討してください。特にミネラル欠乏が疑われる場合。"
        ],
        "poor": [
            "緊急の介入が必要です。作物のストレス原因を特定してください。",
            "土壌と葉の栄養分析を実施し、欠乏している栄養素を補給してください。",
            "灌水を増やし、日陰対策を検討してください。特に高温期の場合。"
        ],
        "very_poor": [
            "作物の救済計画を立ててください。専門家のアドバイスを求めることを検討してください。",
            "土壌のpH値と栄養バランスの完全な評価を実施してください。",
            "病害虫の広範囲な検査を行い、適切な対策を講じてください。"
        ],
        "stressed": [
            "土壌の水分レベルを確認してください。過剰灌水または乾燥が原因かもしれません。",
            "緊急施肥と土壌改良を検討してください。",
            "作物専門家に相談し、救済戦略を立ててください。"
        ]
    },
    "crops": {
        "rice": {
            "excellent": "イネの生育状態は非常に良好です。この期間は窒素の追加を控えめにすることで倒伏を防ぎましょう。",
            "good": "イネの生育は良好ですが、穂の形成期に入っているかもしれません。カリウムの追加が穂の充実に役立ちます。",
            "moderate": "イネの生育は普通ですが、光合成活動をさらに促進するために葉面散布を検討してください。",
            "poor": "イネにストレスの兆候が見られます。水管理を見直し、根の発達を促進してください。",
            "very_poor": "イネの健康状態が危険です。病害虫の検査と緊急施肥を行ってください。",
            "stressed": "イネが深刻なストレス状態です。根腐れや塩害の可能性を調査してください。"
        },
        "wheat": {
            "excellent": "コムギの生育状態は最適です。穂の形成を促進するためのリン酸施肥を検討してください。",
            "good": "コムギの生育は良好です。今後の降雨予報を確認し、必要に応じて灌水計画を調整してください。",
            "moderate": "コムギの成長はやや鈍化しています。追加の窒素施肥が草丈と葉の発達を促進する可能性があります。",
            "poor": "コムギが栄養ストレスを示しています。微量要素の葉面散布を検討してください。",
            "very_poor": "コムギの状態が悪化しています。根域の問題や病害の可能性を確認してください。",
            "stressed": "コムギが深刻なストレス下にあります。緊急の介入と専門家の診断が必要です。"
        },
        "soybean": {
            "excellent": "大豆の生育状態は素晴らしいです。花芽形成期に入っている可能性があるため、適切な水分管理を維持してください。",
            "good": "大豆の生育は順調です。根粒菌の活動を促進するために十分な湿度を維持してください。",
            "moderate": "大豆の生育はやや緩慢です。カリウムとリン酸の追加が莢の発達と充実に役立つでしょう。",
            "poor": "大豆が栄養ストレスの兆候を示しています。微量要素特にマンガンとホウ素の補給を検討してください。",
            "very_poor": "大豆の健康状態が危機的です。根粒形成不全や病害の検査を行ってください。",
            "stressed": "大豆が極度のストレス状態です。水分、病害、害虫の緊急評価が必要です。"
        },
        "vegetables": {
            "excellent": "野菜の生育状態は非常に良好です。収穫計画を立て、品質を維持するための最適な収穫時期を特定してください。",
            "good": "野菜の生育は順調です。果実や可食部の肥大を促進するためにカリウム肥料の追加を検討してください。",
            "moderate": "野菜の生育は平均的です。葉面散布とマルチングで成長を促進できる可能性があります。",
            "poor": "野菜がストレスの兆候を示しています。水分管理を最適化し、微量栄養素の補給を検討してください。",
            "very_poor": "野菜の健康状態が危機的です。病害虫検査と緊急施肥を実施してください。",
            "stressed": "野菜が極度のストレス状態です。専門家の診断を求め、救済計画を立ててください。"
        }
    },
    "seasonal": {
        "spring": {
            "excellent": "春の生育開始が非常に良好です。このまま成長を続けると高収量が期待できます。",
            "good": "春の生育は順調です。気温の上昇に合わせて灌水量を徐々に増やしてください。",
            "moderate": "春の生育はやや遅れ気味です。窒素肥料の追加で成長を促進できる可能性があります。",
            "poor": "春の生育不良が見られます。低温や過湿の影響を受けている可能性があります。排水改善を検討してください。",
            "very_poor": "春の生育が著しく遅れています。種子や苗の品質、土壌条件を確認してください。",
            "stressed": "春の作物が深刻なストレス状態です。再播種または植え直しを検討する必要があるかもしれません。"
        },
        "summer": {
            "excellent": "夏期の生育状態は素晴らしいです。高温ストレスを避けるため十分な灌水を維持してください。",
            "good": "夏期の生育は良好です。日中の蒸発を減らすため早朝または夕方の灌水を検討してください。",
            "moderate": "夏期の生育はやや緩慢です。熱ストレスの兆候がないか監視し、必要に応じて日よけを検討してください。",
            "poor": "夏期の熱ストレスが影響している可能性があります。灌水頻度を増やし、マルチングを検討してください。",
            "very_poor": "夏期の高温が作物に深刻な影響を与えています。緊急の冷却対策と灌水が必要です。",
            "stressed": "夏期の極度の熱ストレス状態です。短期的な救済策と長期的な耐熱性品種への切り替えを検討してください。"
        },
        "autumn": {
            "excellent": "秋の生育状態は非常に良好です。収穫前の品質維持に焦点を当ててください。",
            "good": "秋の生育は順調です。気温低下に備えて灌水量を調整してください。",
            "moderate": "秋の生育は平均的です。追熟を促進するためのリン酸カリウム肥料を検討してください。",
            "poor": "秋の生育不良が見られます。早期霜害対策を準備し、必要に応じて保護対策を講じてください。",
            "very_poor": "秋の作物状態が危機的です。早期収穫を検討し、品質低下を最小限に抑える戦略を立ててください。",
            "stressed": "秋の作物が極度のストレス状態です。収穫を急ぎ、残りの成長期間での損失を最小化してください。"
        },
        "winter": {
            "excellent": "冬作物の生育状態は素晴らしいです。霜害防止対策を継続してください。",
            "good": "冬作物の生育は良好です。低温期に十分な養分吸収を確保するため、葉面散布を検討してください。",
            "moderate": "冬作物の生育は平均的です。マルチングで地温を維持し、根の活動を促進してください。",
            "poor": "冬作物が低温ストレスの兆候を示しています。追加の防寒対策と栄養補給を検討してください。",
            "very_poor": "冬作物の健康状態が危機的です。防寒対策を強化し、栄養ストレスを軽減してください。",
            "stressed": "冬作物が極度のストレス状態です。救済可能な植物に集中し、深刻な損傷を受けた部分は切り戻しを検討してください。"
        }
    }
}

# NDVIの値から健康状態を評価する関数
def evaluate_ndvi_health(ndvi_value):
    """
    NDVIの値から作物の健康状態を評価する
    
    Parameters:
    ndvi_value (float): NDVIの値
    
    Returns:
    str: 健康状態のカテゴリ（excellent, good, moderate, poor, very_poor, stressed）
    """
    for health, (min_val, max_val) in NDVI_MAPPING["health"].items():
        if min_val <= ndvi_value <= max_val:
            return health
    return "unknown"

# 季節を判断する関数
def get_current_season():
    """
    現在の季節を判断する
    
    Returns:
    str: 季節（spring, summer, autumn, winter）
    """
    from datetime import datetime
    
    month = datetime.now().month
    if 3 <= month <= 5:
        return "spring"
    elif 6 <= month <= 8:
        return "summer"
    elif 9 <= month <= 11:
        return "autumn"
    else:
        return "winter"

# NDVIデータから時系列トレンドを分析する関数
def analyze_ndvi_trend(ndvi_history):
    """
    NDVIの履歴データからトレンドを分析する
    
    Parameters:
    ndvi_history (list): NDVIの履歴データのリスト。各要素は {'date': 日付, 'value': NDVI値} の形式
    
    Returns:
    str: トレンドの説明
    """
    if len(ndvi_history) < 2:
        return "不明（十分なデータがありません）"
    
    # 直近3回分のデータで傾向を判断
    recent_data = ndvi_history[-3:] if len(ndvi_history) >= 3 else ndvi_history
    
    # 単純な線形回帰でトレンドを計算
    x = list(range(len(recent_data)))
    y = [item['value'] for item in recent_data]
    
    mean_x = sum(x) / len(x)
    mean_y = sum(y) / len(y)
    
    # 傾きを計算
    numerator = sum([(x[i] - mean_x) * (y[i] - mean_y) for i in range(len(x))])
    denominator = sum([(x[i] - mean_x) ** 2 for i in range(len(x))])
    
    if denominator == 0:
        slope = 0
    else:
        slope = numerator / denominator
    
    # 傾きの解釈
    if slope > 0.05:
        return "上昇傾向（植生の健康状態が改善しています）"
    elif slope < -0.05:
        return "下降傾向（植生の健康状態が悪化しています）"
    else:
        return "安定（植生の健康状態は安定しています）"